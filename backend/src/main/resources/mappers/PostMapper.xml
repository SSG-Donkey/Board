<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.backend.mappers.PostMapper">

    <insert id="insertPost" parameterType="map" >
        INSERT INTO post (post_title, post_content, post_file, user_no,post_views ,post_category,region_no,post_status,point)
        VALUES (#{post_title}, #{post_content}, #{post_file}, #{user_no}, #{post_views},#{post_category},#{region_no},#{post_status},#{point})
    </insert>

    <insert id="insertPost2" parameterType="map" >
        INSERT INTO post (post_title, post_content, post_file, user_no,post_views ,post_category,region_no,post_status,point,user_nickname)
        VALUES (#{post_title}, #{post_content}, #{post_file}, #{user_no}, #{post_views},#{post_category},#{region_no},#{post_status},#{point},#{user_nickname})
    </insert>

    <delete id="deletePost" parameterType="map" >
        DELETE FROM post
        WHERE post_no=#{post_no} AND user_no=#{user_no}
    </delete>

    <select id="validatePost" parameterType="int" resultType="int" >
        SELECT post_no FROM post
        WHERE post_no=#{post_no} AND user_no=#{user_no}
    </select>

    <update id="editPost" parameterType="map">
        UPDATE post
        SET post_title=#{post_title},post_content=#{post_content},post_category=#{post_category},region_no=#{region_no},point=#{point}
        <if test="postFile != null">,post_File = #{postFile}</if>
        WHERE post_no= #{post_no}
    </update>

    <update id="finishPost" parameterType="map">
        UPDATE post
        SET post_status=1
        WHERE post_no= #{post_no}
    </update>

    <update id="sharePost" parameterType="map">
        UPDATE post
        SET post_status=0
        WHERE post_no= #{post_no}
    </update>

    <select id="findShareUser"  parameterType="map" resultType="int">
        SELECT user_no FROM comment WHERE post_no=#{post_no} AND is_chosen=1
    </select>

    <select id="findPoint"  parameterType="map" resultType="int">
        SELECT point FROM point  WHERE post_no=#{post_no}
    </select>
    <update id="givePoint" parameterType="map">
        UPDATE user
        SET amount=#{find_point}
        WHERE user_no= #{find_no}
    </update>

    <select id="findAllPosts" parameterType="map" resultType="com.project.backend.dto.PostDto">
        SELECT post.*, region.region_name as region_name
        FROM post
                 JOIN region ON post.region_no = region.region_no
        ORDER BY post_date DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getTotalPostCount" resultType="int">
        SELECT COUNT(*) FROM posts
    </select>

    <select id="getRecentPost"  resultType="com.project.backend.dto.PostDto">
        SELECT *
        FROM (
                 SELECT post.*, region.region_name as region_name, (select category_name
																	from category
                                                                    where category_no = post.post_category)
                                                                    category_name,
                        ROW_NUMBER() OVER (PARTITION BY post_category ORDER BY post_date DESC) as rn
                 FROM post
                          JOIN region ON post.region_no = region.region_no
             ) AS RankedPosts
        WHERE rn <![CDATA[<=]]> 3
    </select>

    <select id="findPostByTitle" parameterType="string" resultType="com.project.backend.dto.PostDto">
        SELECT * FROM post WHERE post_title = #{getPostTitle}
    </select>

    <select id="findPostByNo" parameterType="string" resultType="com.project.backend.dto.PostDto">
        SELECT * FROM post WHERE post_no = #{getPostNo}
    </select>
    <select id="isWriter" parameterType="string" resultType="int">
        SELECT user_no FROM post WHERE user_no=#{user_no} AND post_no=#{post_no}
    </select>

    <!-- 페이지네이션    -->
    <resultMap id="postResultMap" type="com.project.backend.dto.PostDto">
        <id property="postNo" column="post_no"/>
        <result property="postTitle" column="post_title"/>
        <result property="postContent" column="post_content"/>
        <result property="postFile" column="post_file"/>
        <result property="userNo" column="user_no"/>
        <result property="postViews" column="post_views"/>
        <result property="postCategory" column="post_category"/>
        <result property="regionNo" column="region_no"/>
        <result property="postDate" column="post_date"/>
        <result property="postStatus" column="post_status"/>
    </resultMap>

    <select id="getPosts" resultMap="postResultMap">
        SELECT post.*, region.region_name as region_name
        FROM post
                 JOIN region ON post.region_no = region.region_no
        ORDER BY post_date DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getPostCount" resultType="long">
        SELECT COUNT(*) FROM post
    </select>

    <select id="getPostCountByCategory" parameterType="string" resultType="long">
        <if test="categoryNo != null">
            SELECT COUNT(*) FROM post WHERE post_category = #{categoryNo}
        </if>
        <!-- categoryNo가 null인 경우 -->
        <if test="categoryNo == null">
            SELECT COUNT(*) FROM post
        </if>
    </select>

    <select id="getPostCountBySearch" parameterType="string" resultType="long">
        SELECT COUNT(*) FROM post WHERE post_title like CONCAT('%',#{searchTerm},'%')

    </select>

    <select id="findPostByCategory" parameterType="map" resultMap="postResultMap">
        <!-- categoryNo null이 아닌 경우 -->
        <if test="categoryNo != null">
            SELECT post.*, region.region_name as region_name
            FROM post
            JOIN region ON post.region_no = region.region_no
            WHERE post_category = #{categoryNo}
        </if>
        <!-- categoryNo가 null인 경우 -->
        <if test="categoryNo == null">
            SELECT post.*, region.region_name as region_name
            FROM post
            JOIN region ON post.region_no = region.region_no
        </if>
        ORDER BY post_date DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="findPostBySearch" parameterType="map" resultMap="postResultMap">
        SELECT post.*, region.region_name as region_name
        FROM post
                 JOIN region ON post.region_no = region.region_no
        WHERE post_title like CONCAT('%',#{searchTerm},'%')
        ORDER BY post_date DESC
        LIMIT #{offset}, #{limit}
    </select>

</mapper>
